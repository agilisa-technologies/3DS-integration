@page
@model ThreeDS.Pages.ThreeDSHandlerModel
@{
    Layout = "_EmptyLayout";
}

<form id="billing-form" method="post" style="display:none;">
    <button type="submit">Submit</button>
</form>
<span id="threeds-result" class="alert alert-info" style="display: block; text-align: center;">Autenticando tarjeta...</span>
<iframe id="uniqueThreeDSiframe" src="" style="width: 100%; height: 400px; border: none;"></iframe>

<!-- End of page -->
<!-- Include the JS SDK library script -->
<script src="https://cdn.3dsintegrator.com/threeds.2.2.20231219.min.js"></script>
<script>
    const tds = new ThreeDS(
        "billing-form",
        "c51e9ecd5a39f930d6cdaaeab0977563",
        null,
        {
            endpoint: "https://api-sandbox.3dsintegrator.com/v2.2",
            autoSubmit: false,
            showChallenge: true,
            iframeId: "uniqueThreeDSiframe",
            forcedTimeOut: "10",
            resolve: handleResponse,
            reject: handleError,
            verbose: true
        }
    );
    var startDate = new Date;

    // Assign the value of the binding property ThreeDSResponse to the response variable
    var response = @Html.Raw(Json.Serialize(Model.ThreeDSResponse));

    function submitForm() {
        tds.transactionLastUpdatedTime = "";
        handleVerify(response, handleResponse, handleError);
    }

    function handleVerify(response, resolve, reject){
        var isRebill = false;
        tds.threeDsTransactionId = response.transactionId;
        tds.getToken(function(){});
        tds.protocolVersion = response.protocolVersion;
        if (parseFloat(response.protocolVersion) >= 2)
            "methodURL" in response && tds.createIframe({
            threeDSMethodData: response.threeDSMethodData,
            methodURL: response.methodURL
        });

        if (!isRebill) {
            var endDate = new Date;
            tds.timeTakenForInitial = tds.getTimeElapsed(startDate, endDate)
        }
        tds.pollingResponse = response;
        tds.processChallengeStatus(response.status, resolve, reject, isRebill);
    }

    function handleResponse(response) {
        $('#threeds-modal').modal("hide");
        const resultElement = document.getElementById("threeds-result");
        if (response.status === "Y") {
            console.log("Successful 3DS response returned. Response:", response);
            resultElement.innerHTML = '<div class="alert alert-success">Autenticacion exitosa...</div>';
        } else {
            console.log("Declined 3DS response returned. Response:", response);
            resultElement.innerHTML = '<div class="alert alert-danger">Autenticacion fallida...</div>';
        }
        postMessageToParent(response);
    }

    function postMessageToParent(response) {
        if (window.ReactNativeWebView) {
            window.ReactNativeWebView.postMessage(JSON.stringify(response));
        } else {
            postResult(response);
        }
    }

    function postResult(response) {
        const form = document.createElement("form");
        form.method = "post";
        form.action = "@Model.TargetUrl";
        form.target = "_top";
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "response";
        input.value = JSON.stringify(response);
        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
    }

    document.getElementById("uniqueThreeDSiframe").onload = function () {
        const iframe = document.getElementById("uniqueThreeDSiframe");
        iframe.style.width = "100%";
        iframe.style.height = "400px";
        iframe.style.border = "none";
    };

    function handleError(error) {
        console.log("Error message returned. Error:", error);
    }

    function handleRebillResponse(response) {
        console.log("Verify method Rebill Resolve function called. Response:", response);
    }

    function handleRebillError(error) {
        console.log("Verify method Rebill Reject function called. Error:", error);
    }

    setTimeout(submitForm, 2000);
</script>
